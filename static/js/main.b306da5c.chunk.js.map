{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","Default","sortType","setSortType","isReversed","setIsReversed","visibleGoods","goods","preparedGoods","sort","good1","good2","Length","length","Name","localeCompare","reverse","sortGoods","isShowReset","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,gBAAAA,E,YAAAA,M,KA+BE,IAAME,EAAgB,WAC3B,MAAgCC,mBAAmBH,EAASI,SAA5D,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EA5BR,SAAmBC,EAAiBL,EAAoBE,GACtD,IAAMI,EAAa,YAAOD,GAqB1B,OAnBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKL,EAASe,OACZ,OAAOF,EAAMG,OAASF,EAAME,OAE9B,KAAKhB,EAASiB,KACZ,OAAOJ,EAAMK,cAAcJ,GAE7B,QACE,OAAO,MAKXP,GACFI,EAAcQ,UAGTR,EAMcS,CAAUnB,EAAiBI,EAAUE,GAMpDc,EAAchB,GAAYE,EAEhC,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UACtB,CAAE,WAAYnB,IAAaL,EAASiB,OACtCQ,QAAS,kBAAMnB,EAAYN,EAASiB,OAJtC,iCASA,wBACEM,KAAK,SACLD,UAAWE,IAAG,SAAU,aACtB,CAAE,WAAYnB,IAAaL,EAASe,SACtCU,QAAS,kBAAMnB,EAAYN,EAASe,SAJtC,4BASA,wBACEQ,KAAK,SACLD,UAAWE,IAAG,SAAU,aACtB,CAAE,YAAajB,IACjBkB,QAAS,kBAAMjB,GAAeD,IAJhC,qBASCc,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAS,WAxCjBnB,EAAYN,EAASI,SACrBI,GAAc,IAoCR,sBAYJ,6BACGC,EAAaiB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCtGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b306da5c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  Name = 'name',\n  Length = 'length',\n  Default = '',\n}\n\nfunction sortGoods(goods: string[], sortType: SortType, isReversed: boolean) {\n  const preparedGoods = [...goods];\n\n  if (sortType) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortType) {\n        case SortType.Length:\n          return good1.length - good2.length;\n\n        case SortType.Name:\n          return good1.localeCompare(good2);\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState<SortType>(SortType.Default);\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods = sortGoods(goodsFromServer, sortType, isReversed);\n  const reset = () => {\n    setSortType(SortType.Default);\n    setIsReversed(false);\n  };\n\n  const isShowReset = sortType || isReversed;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info',\n            { 'is-light': sortType !== SortType.Name })}\n          onClick={() => setSortType(SortType.Name)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success',\n            { 'is-light': sortType !== SortType.Length })}\n          onClick={() => setSortType(SortType.Length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning',\n            { 'is-light': !isReversed })}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {isShowReset && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              reset();\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}